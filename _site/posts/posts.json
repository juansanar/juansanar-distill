[
  {
    "path": "posts/2022-05-11-zotero-01/",
    "title": "Need help managing your references? \"El Zotero\" to the rescue!",
    "description": "In the Lands in Between bibliographies, select Zotero as your hero.",
    "author": [
      {
        "name": "Juan C. Sanchez-Arias",
        "url": "https://www.juansanar.com/"
      }
    ],
    "date": "2022-05-11",
    "categories": [],
    "contents": "\r\nIt’s 2022! Use a reference manager ffs\r\nThe tradition of passing information to one generation another one has allowed us to use knowledge to our advantage (TODO REF). However, successfully achieving this requires the ability to track down the origins of such knowledge and related observations, opinions, etc. by adding small notes about them within our writing (TODO REF) as references or footnotes. In the past, this was done manually of course (and you’ll be surprised how many people still follow this ice age practice) and with the development of technology (e.g., personal computers, text processing software, etc), this labour intensive task can be somewhat automated (you still need to gather the information and make sense of it of course, though one day some dystopian AI might do a better job).\r\nAnother challenge that accumulating knowledge brings is managing the sheer amount of content. I wrote a small tidbit about the advantages of using a personal knowledge management tool. In this post, I will focus on managing references, specifically, I will try to convince you should use a reference manager fos:\r\nOrganizing your information sources (e.g., articles, books chapters, dissertations, newspapers, etc).\r\nInserting and formating citations into your text editor of preference (e.g., MS Word, LibreOffice, Zettlr).\r\nCreating and formatting a bibliography.\r\nSo howw do we deal with all this information? Specialized software such as reference manager are fundamental aids when citing knowledge in our writing, especially within the ivory walls of academia, where we (“we” as the academic collective through history) have created rules and style formats for this purpose, to the point that almost every single scholarly magazine has developed a format that best suites their copyediting and styling.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-05-11T18:02:00-07:00",
    "input_file": "need-help-managing-your-references-el-zotero-to-the-rescue.knit.md"
  },
  {
    "path": "posts/2022-04-05-got-528-tab-problems/",
    "title": "Got 528 tab problems",
    "description": "but defeat ain't one.",
    "author": [
      {
        "name": "Juan C. Sanchez-Arias",
        "url": "https://www.juansanar.com/"
      }
    ],
    "date": "2022-04-05",
    "categories": [],
    "contents": "\r\n\r\n\r\n.spoiler {\r\n  visibility: hidden;\r\n}\r\n\r\n.spoiler::before {\r\n  visibility: visible;\r\n  content: \"Spoiler alert! Hover to see the answer.\"\r\n}\r\n\r\n.spoiler:hover {\r\n  visibility: visible;\r\n}\r\n\r\n.spoiler:hover::before {\r\n  display: none;\r\n}\r\n\r\n\r\n\r\nHow many times have you said to yourself: \"I’ll leave this X number of tabs open for now and will check them later to complete (insert task)?\r\n\r\nThe revolutionary introduction of tabs to browsers initiated by “InternetWorks” (developed by BookLink Technologies) and popularized by Mozilla Firefox has allowed users to open as many tabs as they want within a single browser window, limited only by the user’s RAM and tolerability to unreadable (and often unclickable) tabs on the browser title bar. This, combined with the increasingly available RAM in computers (my main desktop rig harbours 32 GB, for example) and the expandability of desktops within the same operating system session can quickly create a disaster of open tabs if one doesn’t pay attention to this matter.\r\nAs shown in the image above, I’ve fallen into the bottomless pit of multiple browsers, with multiple tabs across multiple desktop instances. The result: 528 open tabs. Yes, 528 tabs. Open. All the time. Using Google Chrome.\r\n\r\nThis also means I haven’t shutdown my computer in a while and even when I did (due to priority security updates for Windows), I immediately restored my browser windows and every single one of those 528 tabs.\r\n\r\nBut why? What is the reason underlying this chaos!?\r\n\r\nWithout diving deep into the melting pot inside my head, such chaos is simply the result of disorganization. More specifically, disorganized thoughts and ideas. These 528 tabs represent 528 thoughts and ideas that were not written down, categorized, and interconnected in a timely and structured fashion (I won’t go over the reasons behind this, but let’s say it’s been busy times at Juan’s camp).\r\nIn other words, I was using multiple tabs as a form of personal knowledge management system and -damn- it was an awful, terrible idea.\r\n\r\nPersonal knowledge management? A Personal Knowledgement Management (PKM) is a process of colelcting information in a structured manner so it is retrievable, shareable, and escalable. In simpler terms, a system that can be used as your second brain. I will talk more about this in a separate post.\r\n\r\n\r\nI found a PKM that meets my needs and sort of behaves like a brain. Plus, it checks some of my favourite things: markdown-based, local first, and FOSS. This PKM is called dendron\r\n\r\nIt is #TidyTuesday after all, so let’s explore what were the most common words present in those open tabs.\r\nPackages to use\r\n\r\n\r\nlibrary(readr)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(stringr)\r\nlibrary(tidytext)\r\nlibrary(wordcloud)\r\n\r\n\r\n\r\nLoading data\r\nI’ve been using TabCopy for most of my Chrome experience. It’s a pretty useful extension that lets users copy the tabs that are open on a browser window (and even across multiple browsers windows), which can be easily pasted and save in a text file for later use. I copied the tabs using the TabCopy “Extended Format”, where it generates a line with the name of the tab/website (i.e., the “title”) followed by the URL.\r\n\r\n\r\ntabs <- read_csv(\"data/urls_2022-03-31.txt\", col_names = FALSE)\r\n\r\ntail(tabs)\r\n\r\n\r\n# A tibble: 6 x 1\r\n  X1                                                                  \r\n  <chr>                                                               \r\n1 Fig. 1: Cell composition of the adult human heart. | Nature         \r\n2 https://www.nature.com/articles/s41586-020-2797-4/figures/1         \r\n3 Quantitative cross-species translators of cardiac myocyte electroph~\r\n4 https://www.science.org/doi/10.1126/sciadv.abg0927?url_ver=Z39.88-2~\r\n5 Bioconductor - RCy3                                                 \r\n6 https://bioconductor.org/packages/release/bioc/html/RCy3.html       \r\n\r\nTidying data\r\nThe above output shows that each website’s name is in odd rows with and URL’s in even rows. Because I like data frames, I want to have a column (variable) with each website title and another column with its respective URL. An easy way to do this is by creating dummies indexes to create a tidy dataframe.\r\n\r\n\r\nseq(1, nrow(tabs),2) -> odd_indexes\r\nseq(2, nrow(tabs),2) -> even_indexes\r\n\r\ntabs_df <- data.frame(tabs[odd_indexes,], tabs[even_indexes,])\r\ncolnames(tabs_df) <- c(\"url_title\", \"url\")\r\n\r\nknitr::kable(tail(tabs_df))\r\n\r\n\r\n\r\nurl_title\r\nurl\r\n366\r\nSINGLE-LETTER AMINO ACID CODE\r\nhttp://130.88.97.239/bioactivity/aacodefrm.html\r\n367\r\nThe developmental transcriptome of the human heart | Scientific Reports\r\nhttps://www.nature.com/articles/s41598-018-33837-6#Sec10\r\n368\r\nThe Transitional Heart: From Early Embryonic and Fetal Development to Neonatal Life - FullText - Fetal Diagnosis and Therapy 2020, Vol. 47, No. 5 - Karger Publishers\r\nhttps://www.karger.com/Article/Fulltext/501906\r\n369\r\nFig. 1: Cell composition of the adult human heart. | Nature\r\nhttps://www.nature.com/articles/s41586-020-2797-4/figures/1\r\n370\r\nQuantitative cross-species translators of cardiac myocyte electrophysiology: Model training, experimental validation, and applications\r\nhttps://www.science.org/doi/10.1126/sciadv.abg0927?url_ver=Z39.88-2003&rfr_id=ori:rid:crossref.org&rfr_dat=cr_pub%20%200pubmed\r\n371\r\nBioconductor - RCy3\r\nhttps://bioconductor.org/packages/release/bioc/html/RCy3.html\r\n\r\nWordcloud\r\nNow that we have a tidy data frame (tabs_df), let’s create a wordcloud with the help of tidytext and wordcloud packages and see what I have been reading heavily lately on the web.\r\n\r\n\r\ntext_df <- tibble(line = 1:371, text = tabs_df$url_title)\r\n\r\ntext_df %>% unnest_tokens(word, text) -> text_unnested\r\n\r\ntext_unnested %>%  filter(!word %in% c(\r\n  \"the\", \"and\", \"of\", \"in\", \"a\",\r\n  \"to\", \"for\", \"1\", \"2\", \"at\", \"is\",\r\n  \"are\", \"as\", \"b\", \"an\", \"on\",\r\n  \"i\", \"by\", \"e\", \"it\", \"its\", \"etc\"\r\n  )) %>% count(word, sort = TRUE) -> text_unnested.filtered\r\n\r\nwordcloud(words = text_unnested.filtered$word,\r\n          freq = text_unnested.filtered$n, \r\n          min.freq = 1, max.words = 200, \r\n          random.order = FALSE, rot.per = 0.35, \r\n          colors = rev(viridis::magma(n = 131100)))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-04-05-got-528-tab-problems/got-528-tab-problems_files/figure-html5/wordcloud-1.png",
    "last_modified": "2022-04-05T12:29:24-07:00",
    "input_file": "got-528-tab-problems.knit.md"
  },
  {
    "path": "posts/2022-02-03-introducing-r-to-teammates/",
    "title": "IntRoducing R to your team - Part 01",
    "description": "Friends don't let friends pay licenses for stats software.",
    "author": [
      {
        "name": "Juan C. Sanchez-Arias",
        "url": "https://www.juansanar.com/"
      }
    ],
    "date": "2022-02-03",
    "categories": [
      "R",
      "data science",
      "tutorial"
    ],
    "contents": "\r\nWhat is ?\r\nAs defined by The R Foundation,  is “a language and environment for statistical computing and graphics”. In other words, you can use  to carry on a wide variety of stats, visualize data (in the most beautiful ways out there), as well as implement many other purposes extending beyond statistics (this html document and website was created using !)\r\nYou can get  directly through The R Project website. In their homepage, they’ll have listed the latest available version of R (4.1.2 “Bird Hippie” at the time of writing this post).  is available for the main operating systems (i.e., GNU/Linux, Windows, and macOS). \r\nWhy ?\r\nIs  the ultimate statistical software? Heck yeah! Is it the only option to do stats for your research or hobbies? No. \r\n\r\nThere’s quite a selection of software tools available. I gravitate to R for the following reasons:\r\nFree\r\nOpen source\r\nExtensible\r\nStatistical forward programming language (made by statistician for statistics)\r\nGreat IDE integration (Hi there RStudio! 😄)\r\n\r\nCongratulation! You are now ready to embark your data journey. Ya!\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-11T00:29:47-08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "New, skills, new site, same Juan",
    "description": "Bye Hugo Academic, Hola distill!\n\n*The views in my personal website do not reflect those of my employer nor affiliations.",
    "author": [
      {
        "name": "Juan C. Sanchez-Arias",
        "url": "https://www.juansanar.com/"
      }
    ],
    "date": "2021-11-06",
    "categories": [],
    "contents": "\r\nI have been rocking my personal website through a GitHub + Netlify concoction since its inception in Fall 2018 as I prepared for SfN 2018 in San Diego. During that fall I kept finding “twittertorials” on building a website with the above tools and how important an online presence was for academics, especially for us Early Career Researchers.\r\nScreenshot from old website built with hugo-academic + GitHub + NetlifyIn that moment, I decided not to use RStudio and blogdown as part of the process and made all my editing on VS Code as I was at the peak of my honeymoon with the mark-up language Markdown (a honeymoon that continues until today, I love markdown!) and was just getting a grasp of R and RStudio.\r\nManaging a static website through hugo-academic was super fun and I really enjoyed the experience. I gained numerous skills that I always wanted to build up on as someone who has always loved tech, the internet, and more recently, programming.\r\nI’ll miss the site and its features, but I am looking forward to explore and exploit the distill package for R. I find myself using R and RStudo more frequently for my day-to-day activities but also my hobbies and professional development, so this seemed like the most natural step moving forward.\r\nI’m also hopeful that by having my website workflow well integrated with R and RStudio I can continue to advance my data science journey, because let’s face it, we all are data nerd deep inside and love nice plots\r\n\r\n\r\n# Circle plot (example based on https://www.r-graph-gallery.com/226-plot-types-for-circular-plot.html)\r\ncirclize::circos.par(\"track.height\" = 0.4)\r\n\r\ndata = data.frame(\r\n  factor = sample(seq(1,24), 1000, replace = TRUE),\r\n  x = rnorm(1000),\r\n  y = runif(1000)\r\n)\r\n\r\n# Step1: Initialise the chart giving factor and x-axis.\r\ncirclize::circos.initialize( factors=data$factor, x=data$x )\r\n\r\ncirclize::circos.trackHist(data$factor, data$x, bg.col = \"white\", col = \"#69b3a2\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/welcome/welcome_files/figure-html5/plot-1.png",
    "last_modified": "2021-11-07T01:13:43-08:00",
    "input_file": {}
  }
]
